
-- CRIANDO TABELA COM MORADORES DA COMUNIDADE
CREATE TABLE IF NOT EXISTS PUBLIC.MORADORES (
    ID SERIAL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    CPF VARCHAR(14) NOT NULL UNIQUE,
    NUMERO_RESIDENCIA VARCHAR(10),
    NUMERO_TELEFONE VARCHAR(15),
    CEP VARCHAR(10)
);

-- CRIANDO TABELA DOS INTEGRANTES DA ASSOCIAÇÃO
CREATE TABLE IF NOT EXISTS PUBLIC.INTEGRANTE_ASSOCIACAO (
    ID SERIAL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    CPF VARCHAR(14) NOT NULL UNIQUE,
    CARGO VARCHAR(50),
    MORADOR_ID INT,
    CONSTRAINT FK_MORADOR_ID FOREIGN KEY (MORADOR_ID) REFERENCES PUBLIC.MORADORES(ID)
);

-- TABELA PARA REUNIÕES DA ASSOCIAÇÃO
CREATE TABLE IF NOT EXISTS PUBLIC.REUNIAO (
    ID SERIAL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    DATA DATE NOT NULL
);

-- CRIANDO TABELA COM OBJETIVOS DA ASSOCIAÇÃO
CREATE TABLE IF NOT EXISTS PUBLIC.OBJETIVOS (
    ID SERIAL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    DESCRICAO TEXT,
    VALOR NUMERIC(10, 2)
);

-- CRIANDO TABELA DE DOAÇÕES RECEBIDAS
CREATE TABLE IF NOT EXISTS PUBLIC.DOAÇÕES_RECEBIDAS (
    ID SERIAL PRIMARY KEY,
    DOADOR INT,
    VALOR NUMERIC(10, 2) NOT NULL,
    DATA DATE NOT NULL,
    CONSTRAINT FK_DOADOR FOREIGN KEY (DOADOR) REFERENCES PUBLIC.MORADORES(ID)
);

-- CRIANDO TABELA DE AGENDA (ASSOCIANDO REUNIÃO E INTEGRANTE DA ASSOCIAÇÃO)
CREATE TABLE IF NOT EXISTS PUBLIC.AGENDA (
    REUNIAO_ID INT,
    INTEGRANTE_ASSOCIACAO_ID INT,
    PRIMARY KEY (REUNIAO_ID, INTEGRANTE_ASSOCIACAO_ID),
    CONSTRAINT FK_REUNIAO_ID FOREIGN KEY (REUNIAO_ID) REFERENCES PUBLIC.REUNIAO(ID),
    CONSTRAINT FK_INTEGRANTE_ASSOCIACAO_ID FOREIGN KEY (INTEGRANTE_ASSOCIACAO_ID) REFERENCES PUBLIC.INTEGRANTE_ASSOCIACAO(ID)
);

-- TABELA PARTICIPA (ASSOCIANDO MORADORES E REUNIÕES)
CREATE TABLE IF NOT EXISTS PUBLIC.PARTICIPA (
    MORADOR_ID INT,
    REUNIAO_ID INT,
    PRIMARY KEY (MORADOR_ID, REUNIAO_ID),
    CONSTRAINT FK_MORADOR_ID FOREIGN KEY (MORADOR_ID) REFERENCES PUBLIC.MORADORES(ID),
    CONSTRAINT FK_REUNIAO_ID_PARTICIPA FOREIGN KEY (REUNIAO_ID) REFERENCES PUBLIC.REUNIAO(ID)
);

-- TABELA PARA ASSOCIAR REUNIÃO E OBJETIVOS
CREATE TABLE IF NOT EXISTS PUBLIC.REUNIAO_OBJETIVOS (
    REUNIAO_ID INT,
    OBJETIVO_ID INT,
    PRIMARY KEY (REUNIAO_ID, OBJETIVO_ID),
    CONSTRAINT FK_REUNIAO_ID_OBJETIVOS FOREIGN KEY (REUNIAO_ID) REFERENCES PUBLIC.REUNIAO(ID),
    CONSTRAINT FK_OBJETIVO_ID FOREIGN KEY (OBJETIVO_ID) REFERENCES PUBLIC.OBJETIVOS(ID)
);

-- TABELA PARA CADASTRAR DOAÇÕES (ASSOCIANDO INTEGRANTES DA ASSOCIAÇÃO E DOAÇÕES RECEBIDAS)
CREATE TABLE IF NOT EXISTS PUBLIC.CADASTRA (
    INTEGRANTE_ASSOCIACAO_ID INT,
    DOACAO_RECEBIDA_ID INT,
    PRIMARY KEY (INTEGRANTE_ASSOCIACAO_ID, DOACAO_RECEBIDA_ID),
    CONSTRAINT FK_INTEGRANTE_ASSOCIACAO_ID_CADASTRA FOREIGN KEY (INTEGRANTE_ASSOCIACAO_ID) REFERENCES PUBLIC.INTEGRANTE_ASSOCIACAO(ID),
    CONSTRAINT FK_DOACAO_RECEBIDA_ID FOREIGN KEY (DOACAO_RECEBIDA_ID) REFERENCES PUBLIC.DOAÇÕES_RECEBIDAS(ID)
);
